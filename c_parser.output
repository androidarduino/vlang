Terminals unused in grammar

    AUTO
    CASE
    DEFAULT
    EXTERN
    INLINE
    REGISTER
    STATIC
    TYPEDEF
    UNION


Rules useless in parser due to conflicts

   40 abstract_declarator_opt: ε


State 124 conflicts: 1 reduce/reduce
State 173 conflicts: 2 reduce/reduce
State 250 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration_list

    2 external_declaration_list: external_declaration_list external_declaration
    3                          | external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: declaration_specifiers declarator compound_statement

    7 declaration_specifiers: type_specifier
    8                       | type_specifier declaration_specifiers

    9 type_specifier: VOID
   10               | CHAR
   11               | SHORT
   12               | INT
   13               | LONG
   14               | FLOAT
   15               | DOUBLE
   16               | SIGNED
   17               | UNSIGNED
   18               | BOOL
   19               | COMPLEX
   20               | IMAGINARY
   21               | STRUCT IDENTIFIER
   22               | ENUM IDENTIFIER

   23 declarator: pointer_opt direct_declarator

   24 pointer_opt: ε
   25            | STAR pointer_opt

   26 direct_declarator: IDENTIFIER
   27                  | LPAREN declarator RPAREN
   28                  | direct_declarator LPAREN parameter_type_list RPAREN
   29                  | direct_declarator LPAREN RPAREN
   30                  | direct_declarator LBRACKET assignment_expression RBRACKET
   31                  | direct_declarator LBRACKET RBRACKET

   32 parameter_type_list: parameter_list
   33                    | parameter_list COMMA ELLIPSIS

   34 parameter_list: parameter_declaration
   35               | parameter_list COMMA parameter_declaration

   36 parameter_declaration: declaration_specifiers declarator
   37                      | declaration_specifiers abstract_declarator_opt

   38 abstract_declarator: pointer_opt direct_abstract_declarator
   39                    | pointer_opt

   40 abstract_declarator_opt: ε
   41                        | abstract_declarator

   42 direct_abstract_declarator: LPAREN abstract_declarator RPAREN
   43                           | direct_abstract_declarator LPAREN parameter_type_list RPAREN
   44                           | direct_abstract_declarator LPAREN RPAREN
   45                           | direct_abstract_declarator LBRACKET assignment_expression RBRACKET
   46                           | direct_abstract_declarator LBRACKET RBRACKET

   47 declaration: declaration_specifiers init_declarator_list SEMICOLON

   48 init_declarator_list: init_declarator
   49                     | init_declarator_list COMMA init_declarator

   50 init_declarator: declarator
   51                | declarator ASSIGN initializer

   52 initializer: assignment_expression
   53            | LBRACE initializer_list RBRACE
   54            | LBRACE initializer_list COMMA RBRACE

   55 initializer_list: initializer
   56                 | initializer_list COMMA initializer

   57 statement: compound_statement
   58          | expression_statement
   59          | selection_statement
   60          | iteration_statement
   61          | jump_statement

   62 compound_statement: LBRACE block_item_list RBRACE
   63                   | LBRACE RBRACE

   64 block_item_list: block_item_list block_item
   65                | block_item

   66 block_item: declaration
   67           | statement

   68 expression_statement: expression SEMICOLON
   69                     | SEMICOLON

   70 selection_statement: IF LPAREN expression RPAREN statement
   71                    | IF LPAREN expression RPAREN statement ELSE statement
   72                    | SWITCH LPAREN expression RPAREN statement

   73 iteration_statement: WHILE LPAREN expression RPAREN statement
   74                    | DO statement WHILE LPAREN expression RPAREN SEMICOLON
   75                    | FOR LPAREN expression_statement expression_statement RPAREN statement
   76                    | FOR LPAREN expression_statement expression_statement expression RPAREN statement

   77 jump_statement: GOTO IDENTIFIER SEMICOLON
   78               | CONTINUE SEMICOLON
   79               | BREAK SEMICOLON
   80               | RETURN expression SEMICOLON
   81               | RETURN SEMICOLON

   82 expression: assignment_expression
   83           | expression COMMA assignment_expression

   84 assignment_expression: conditional_expression
   85                      | unary_expression assignment_operator assignment_expression

   86 assignment_operator: ASSIGN
   87                    | MUL_ASSIGN
   88                    | DIV_ASSIGN
   89                    | MOD_ASSIGN
   90                    | ADD_ASSIGN
   91                    | SUB_ASSIGN
   92                    | LEFT_ASSIGN
   93                    | RIGHT_ASSIGN
   94                    | AND_ASSIGN
   95                    | XOR_ASSIGN
   96                    | OR_ASSIGN

   97 conditional_expression: logical_or_expression
   98                       | logical_or_expression QUESTION expression COLON conditional_expression

   99 logical_or_expression: logical_and_expression
  100                      | logical_or_expression OR_OP logical_and_expression

  101 logical_and_expression: inclusive_or_expression
  102                       | logical_and_expression AND_OP inclusive_or_expression

  103 inclusive_or_expression: exclusive_or_expression
  104                        | inclusive_or_expression PIPE exclusive_or_expression

  105 exclusive_or_expression: and_expression
  106                        | exclusive_or_expression CARET and_expression

  107 and_expression: equality_expression
  108               | and_expression AMPERSAND equality_expression

  109 equality_expression: relational_expression
  110                    | equality_expression EQ_OP relational_expression
  111                    | equality_expression NE_OP relational_expression

  112 relational_expression: shift_expression
  113                      | relational_expression LT shift_expression
  114                      | relational_expression GT shift_expression
  115                      | relational_expression LE_OP shift_expression
  116                      | relational_expression GE_OP shift_expression

  117 shift_expression: additive_expression
  118                 | shift_expression LEFT_OP additive_expression
  119                 | shift_expression RIGHT_OP additive_expression

  120 additive_expression: multiplicative_expression
  121                    | additive_expression PLUS multiplicative_expression
  122                    | additive_expression MINUS multiplicative_expression

  123 multiplicative_expression: cast_expression
  124                          | multiplicative_expression STAR cast_expression
  125                          | multiplicative_expression SLASH cast_expression
  126                          | multiplicative_expression PERCENT cast_expression

  127 cast_expression: unary_expression
  128                | LPAREN type_name RPAREN cast_expression

  129 unary_expression: postfix_expression
  130                 | INC_OP unary_expression
  131                 | DEC_OP unary_expression
  132                 | unary_operator cast_expression
  133                 | SIZEOF unary_expression
  134                 | SIZEOF LPAREN type_name RPAREN

  135 unary_operator: AMPERSAND
  136               | STAR
  137               | PLUS
  138               | MINUS
  139               | TILDE
  140               | EXCLAMATION

  141 postfix_expression: primary_expression
  142                   | postfix_expression LBRACKET expression RBRACKET
  143                   | postfix_expression LPAREN RPAREN
  144                   | postfix_expression LPAREN argument_expression_list RPAREN
  145                   | postfix_expression DOT IDENTIFIER
  146                   | postfix_expression PTR_OP IDENTIFIER
  147                   | postfix_expression INC_OP
  148                   | postfix_expression DEC_OP

  149 primary_expression: IDENTIFIER
  150                   | INTEGER_CONSTANT
  151                   | FLOATING_CONSTANT
  152                   | CHARACTER_CONSTANT
  153                   | STRING_LITERAL
  154                   | LPAREN expression RPAREN

  155 argument_expression_list: assignment_expression
  156                         | argument_expression_list COMMA assignment_expression

  157 type_name: specifier_qualifier_list abstract_declarator_opt

  158 specifier_qualifier_list: type_specifier specifier_qualifier_list
  159                         | type_specifier
  160                         | type_qualifier specifier_qualifier_list
  161                         | type_qualifier

  162 type_qualifier: CONST
  163               | RESTRICT
  164               | VOLATILE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258)
    BREAK (259) 79
    CASE (260)
    CHAR (261) 10
    CONST (262) 162
    CONTINUE (263) 78
    DEFAULT (264)
    DO (265) 74
    DOUBLE (266) 15
    ELSE (267) 71
    ENUM (268) 22
    EXTERN (269)
    FLOAT (270) 14
    FOR (271) 75 76
    GOTO (272) 77
    IF (273) 70 71
    INLINE (274)
    INT (275) 12
    LONG (276) 13
    REGISTER (277)
    RESTRICT (278) 163
    RETURN (279) 80 81
    SHORT (280) 11
    SIGNED (281) 16
    SIZEOF (282) 133 134
    STATIC (283)
    STRUCT (284) 21
    SWITCH (285) 72
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 17
    VOID (289) 9
    VOLATILE (290) 164
    WHILE (291) 73 74
    BOOL (292) 18
    COMPLEX (293) 19
    IMAGINARY (294) 20
    IDENTIFIER <string_val> (295) 21 22 26 77 145 146 149
    INTEGER_CONSTANT <int_val> (296) 150
    FLOATING_CONSTANT <float_val> (297) 151
    CHARACTER_CONSTANT <string_val> (298) 152
    STRING_LITERAL <string_val> (299) 153
    ELLIPSIS (300) 33
    RIGHT_ASSIGN (301) 93
    LEFT_ASSIGN (302) 92
    ADD_ASSIGN (303) 90
    SUB_ASSIGN (304) 91
    MUL_ASSIGN (305) 87
    DIV_ASSIGN (306) 88
    MOD_ASSIGN (307) 89
    AND_ASSIGN (308) 94
    XOR_ASSIGN (309) 95
    OR_ASSIGN (310) 96
    RIGHT_OP (311) 119
    LEFT_OP (312) 118
    INC_OP (313) 130 147
    DEC_OP (314) 131 148
    PTR_OP (315) 146
    AND_OP (316) 102
    OR_OP (317) 100
    LE_OP (318) 115
    GE_OP (319) 116
    EQ_OP (320) 110
    NE_OP (321) 111
    SEMICOLON (322) 47 68 69 74 77 78 79 80 81
    LBRACE (323) 53 54 62 63
    RBRACE (324) 53 54 62 63
    COMMA (325) 33 35 49 54 56 83 156
    COLON (326) 98
    ASSIGN (327) 51 86
    LPAREN (328) 27 28 29 42 43 44 70 71 72 73 74 75 76 128 134 143 144 154
    RPAREN (329) 27 28 29 42 43 44 70 71 72 73 74 75 76 128 134 143 144 154
    LBRACKET (330) 30 31 45 46 142
    RBRACKET (331) 30 31 45 46 142
    DOT (332) 145
    AMPERSAND (333) 108 135
    EXCLAMATION (334) 140
    TILDE (335) 139
    MINUS (336) 122 138
    PLUS (337) 121 137
    STAR (338) 25 124 136
    SLASH (339) 125
    PERCENT (340) 126
    LT (341) 113
    GT (342) 114
    CARET (343) 106
    PIPE (344) 104
    QUESTION (345) 98


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    program (92)
        on left: 1
        on right: 0
    external_declaration_list (93)
        on left: 2 3
        on right: 1 2
    external_declaration (94)
        on left: 4 5
        on right: 2 3
    function_definition (95)
        on left: 6
        on right: 4
    declaration_specifiers (96)
        on left: 7 8
        on right: 6 8 36 37 47
    type_specifier (97)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 7 8 158 159
    declarator (98)
        on left: 23
        on right: 6 27 36 50 51
    pointer_opt (99)
        on left: 24 25
        on right: 23 25 38 39
    direct_declarator (100)
        on left: 26 27 28 29 30 31
        on right: 23 28 29 30 31
    parameter_type_list (101)
        on left: 32 33
        on right: 28 43
    parameter_list (102)
        on left: 34 35
        on right: 32 33 35
    parameter_declaration (103)
        on left: 36 37
        on right: 34 35
    abstract_declarator (104)
        on left: 38 39
        on right: 41 42
    abstract_declarator_opt (105)
        on left: 40 41
        on right: 37 157
    direct_abstract_declarator (106)
        on left: 42 43 44 45 46
        on right: 38 43 44 45 46
    declaration (107)
        on left: 47
        on right: 5 66
    init_declarator_list (108)
        on left: 48 49
        on right: 47 49
    init_declarator (109)
        on left: 50 51
        on right: 48 49
    initializer (110)
        on left: 52 53 54
        on right: 51 55 56
    initializer_list (111)
        on left: 55 56
        on right: 53 54 56
    statement (112)
        on left: 57 58 59 60 61
        on right: 67 70 71 72 73 74 75 76
    compound_statement (113)
        on left: 62 63
        on right: 6 57
    block_item_list (114)
        on left: 64 65
        on right: 62 64
    block_item (115)
        on left: 66 67
        on right: 64 65
    expression_statement (116)
        on left: 68 69
        on right: 58 75 76
    selection_statement (117)
        on left: 70 71 72
        on right: 59
    iteration_statement (118)
        on left: 73 74 75 76
        on right: 60
    jump_statement (119)
        on left: 77 78 79 80 81
        on right: 61
    expression (120)
        on left: 82 83
        on right: 68 70 71 72 73 74 76 80 83 98 142 154
    assignment_expression (121)
        on left: 84 85
        on right: 30 45 52 82 83 85 155 156
    assignment_operator (122)
        on left: 86 87 88 89 90 91 92 93 94 95 96
        on right: 85
    conditional_expression (123)
        on left: 97 98
        on right: 84 98
    logical_or_expression (124)
        on left: 99 100
        on right: 97 98 100
    logical_and_expression (125)
        on left: 101 102
        on right: 99 100 102
    inclusive_or_expression (126)
        on left: 103 104
        on right: 101 102 104
    exclusive_or_expression (127)
        on left: 105 106
        on right: 103 104 106
    and_expression (128)
        on left: 107 108
        on right: 105 106 108
    equality_expression (129)
        on left: 109 110 111
        on right: 107 108 110 111
    relational_expression (130)
        on left: 112 113 114 115 116
        on right: 109 110 111 113 114 115 116
    shift_expression (131)
        on left: 117 118 119
        on right: 112 113 114 115 116 118 119
    additive_expression (132)
        on left: 120 121 122
        on right: 117 118 119 121 122
    multiplicative_expression (133)
        on left: 123 124 125 126
        on right: 120 121 122 124 125 126
    cast_expression (134)
        on left: 127 128
        on right: 123 124 125 126 128 132
    unary_expression (135)
        on left: 129 130 131 132 133 134
        on right: 85 127 130 131 133
    unary_operator (136)
        on left: 135 136 137 138 139 140
        on right: 132
    postfix_expression (137)
        on left: 141 142 143 144 145 146 147 148
        on right: 129 142 143 144 145 146 147 148
    primary_expression (138)
        on left: 149 150 151 152 153 154
        on right: 141
    argument_expression_list (139)
        on left: 155 156
        on right: 144 156
    type_name (140)
        on left: 157
        on right: 128 134
    specifier_qualifier_list (141)
        on left: 158 159 160 161
        on right: 157 158 160
    type_qualifier (142)
        on left: 162 163 164
        on right: 160 161


State 0

    0 $accept: • program $end

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14

    program                    go to state 15
    external_declaration_list  go to state 16
    external_declaration       go to state 17
    function_definition        go to state 18
    declaration_specifiers     go to state 19
    type_specifier             go to state 20
    declaration                go to state 21


State 1

   10 type_specifier: CHAR •

    $default  reduce using rule 10 (type_specifier)


State 2

   15 type_specifier: DOUBLE •

    $default  reduce using rule 15 (type_specifier)


State 3

   22 type_specifier: ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 4

   14 type_specifier: FLOAT •

    $default  reduce using rule 14 (type_specifier)


State 5

   12 type_specifier: INT •

    $default  reduce using rule 12 (type_specifier)


State 6

   13 type_specifier: LONG •

    $default  reduce using rule 13 (type_specifier)


State 7

   11 type_specifier: SHORT •

    $default  reduce using rule 11 (type_specifier)


State 8

   16 type_specifier: SIGNED •

    $default  reduce using rule 16 (type_specifier)


State 9

   21 type_specifier: STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 10

   17 type_specifier: UNSIGNED •

    $default  reduce using rule 17 (type_specifier)


State 11

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 12

   18 type_specifier: BOOL •

    $default  reduce using rule 18 (type_specifier)


State 13

   19 type_specifier: COMPLEX •

    $default  reduce using rule 19 (type_specifier)


State 14

   20 type_specifier: IMAGINARY •

    $default  reduce using rule 20 (type_specifier)


State 15

    0 $accept: program • $end

    $end  shift, and go to state 24


State 16

    1 program: external_declaration_list •
    2 external_declaration_list: external_declaration_list • external_declaration

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14

    $default  reduce using rule 1 (program)

    external_declaration    go to state 25
    function_definition     go to state 18
    declaration_specifiers  go to state 19
    type_specifier          go to state 20
    declaration             go to state 21


State 17

    3 external_declaration_list: external_declaration •

    $default  reduce using rule 3 (external_declaration_list)


State 18

    4 external_declaration: function_definition •

    $default  reduce using rule 4 (external_declaration)


State 19

    6 function_definition: declaration_specifiers • declarator compound_statement
   47 declaration: declaration_specifiers • init_declarator_list SEMICOLON

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    declarator            go to state 27
    pointer_opt           go to state 28
    init_declarator_list  go to state 29
    init_declarator       go to state 30


State 20

    7 declaration_specifiers: type_specifier •
    8                       | type_specifier • declaration_specifiers

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14

    $default  reduce using rule 7 (declaration_specifiers)

    declaration_specifiers  go to state 31
    type_specifier          go to state 20


State 21

    5 external_declaration: declaration •

    $default  reduce using rule 5 (external_declaration)


State 22

   22 type_specifier: ENUM IDENTIFIER •

    $default  reduce using rule 22 (type_specifier)


State 23

   21 type_specifier: STRUCT IDENTIFIER •

    $default  reduce using rule 21 (type_specifier)


State 24

    0 $accept: program $end •

    $default  accept


State 25

    2 external_declaration_list: external_declaration_list external_declaration •

    $default  reduce using rule 2 (external_declaration_list)


State 26

   25 pointer_opt: STAR • pointer_opt

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    pointer_opt  go to state 32


State 27

    6 function_definition: declaration_specifiers declarator • compound_statement
   50 init_declarator: declarator •
   51                | declarator • ASSIGN initializer

    LBRACE  shift, and go to state 33
    ASSIGN  shift, and go to state 34

    $default  reduce using rule 50 (init_declarator)

    compound_statement  go to state 35


State 28

   23 declarator: pointer_opt • direct_declarator

    IDENTIFIER  shift, and go to state 36
    LPAREN      shift, and go to state 37

    direct_declarator  go to state 38


State 29

   47 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   49 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 39
    COMMA      shift, and go to state 40


State 30

   48 init_declarator_list: init_declarator •

    $default  reduce using rule 48 (init_declarator_list)


State 31

    8 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 8 (declaration_specifiers)


State 32

   25 pointer_opt: STAR pointer_opt •

    $default  reduce using rule 25 (pointer_opt)


State 33

   62 compound_statement: LBRACE • block_item_list RBRACE
   63                   | LBRACE • RBRACE

    BREAK               shift, and go to state 41
    CHAR                shift, and go to state 1
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    DOUBLE              shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 4
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    INT                 shift, and go to state 5
    LONG                shift, and go to state 6
    RETURN              shift, and go to state 47
    SHORT               shift, and go to state 7
    SIGNED              shift, and go to state 8
    SIZEOF              shift, and go to state 48
    STRUCT              shift, and go to state 9
    SWITCH              shift, and go to state 49
    UNSIGNED            shift, and go to state 10
    VOID                shift, and go to state 11
    WHILE               shift, and go to state 50
    BOOL                shift, and go to state 12
    COMPLEX             shift, and go to state 13
    IMAGINARY           shift, and go to state 14
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    RBRACE              shift, and go to state 59
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    declaration_specifiers     go to state 67
    type_specifier             go to state 20
    declaration                go to state 68
    statement                  go to state 69
    compound_statement         go to state 70
    block_item_list            go to state 71
    block_item                 go to state 72
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 34

   51 init_declarator: declarator ASSIGN • initializer

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LBRACE              shift, and go to state 95
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    initializer                go to state 96
    assignment_expression      go to state 97
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 35

    6 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 6 (function_definition)


State 36

   26 direct_declarator: IDENTIFIER •

    $default  reduce using rule 26 (direct_declarator)


State 37

   27 direct_declarator: LPAREN • declarator RPAREN

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    declarator   go to state 98
    pointer_opt  go to state 28


State 38

   23 declarator: pointer_opt direct_declarator •
   28 direct_declarator: direct_declarator • LPAREN parameter_type_list RPAREN
   29                  | direct_declarator • LPAREN RPAREN
   30                  | direct_declarator • LBRACKET assignment_expression RBRACKET
   31                  | direct_declarator • LBRACKET RBRACKET

    LPAREN    shift, and go to state 99
    LBRACKET  shift, and go to state 100

    $default  reduce using rule 23 (declarator)


State 39

   47 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 47 (declaration)


State 40

   49 init_declarator_list: init_declarator_list COMMA • init_declarator

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    declarator       go to state 101
    pointer_opt      go to state 28
    init_declarator  go to state 102


State 41

   79 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 42

   78 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 43

   74 iteration_statement: DO • statement WHILE LPAREN expression RPAREN SEMICOLON

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 105
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 44

   75 iteration_statement: FOR • LPAREN expression_statement expression_statement RPAREN statement
   76                    | FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 106


State 45

   77 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 107


State 46

   70 selection_statement: IF • LPAREN expression RPAREN statement
   71                    | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 108


State 47

   80 jump_statement: RETURN • expression SEMICOLON
   81               | RETURN • SEMICOLON

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 109
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 110
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 48

  133 unary_expression: SIZEOF • unary_expression
  134                 | SIZEOF • LPAREN type_name RPAREN

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 111
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    unary_expression    go to state 112
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 49

   72 selection_statement: SWITCH • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 113


State 50

   73 iteration_statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 114


State 51

  149 primary_expression: IDENTIFIER •

    $default  reduce using rule 149 (primary_expression)


State 52

  150 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 150 (primary_expression)


State 53

  151 primary_expression: FLOATING_CONSTANT •

    $default  reduce using rule 151 (primary_expression)


State 54

  152 primary_expression: CHARACTER_CONSTANT •

    $default  reduce using rule 152 (primary_expression)


State 55

  153 primary_expression: STRING_LITERAL •

    $default  reduce using rule 153 (primary_expression)


State 56

  130 unary_expression: INC_OP • unary_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 115
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    unary_expression    go to state 116
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 57

  131 unary_expression: DEC_OP • unary_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 115
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    unary_expression    go to state 117
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 58

   69 expression_statement: SEMICOLON •

    $default  reduce using rule 69 (expression_statement)


State 59

   63 compound_statement: LBRACE RBRACE •

    $default  reduce using rule 63 (compound_statement)


State 60

  128 cast_expression: LPAREN • type_name RPAREN cast_expression
  154 primary_expression: LPAREN • expression RPAREN

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 118
    DOUBLE              shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 4
    INT                 shift, and go to state 5
    LONG                shift, and go to state 6
    RESTRICT            shift, and go to state 119
    SHORT               shift, and go to state 7
    SIGNED              shift, and go to state 8
    SIZEOF              shift, and go to state 48
    STRUCT              shift, and go to state 9
    UNSIGNED            shift, and go to state 10
    VOID                shift, and go to state 11
    VOLATILE            shift, and go to state 120
    BOOL                shift, and go to state 12
    COMPLEX             shift, and go to state 13
    IMAGINARY           shift, and go to state 14
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    type_specifier             go to state 121
    expression                 go to state 122
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94
    type_name                  go to state 123
    specifier_qualifier_list   go to state 124
    type_qualifier             go to state 125


State 61

  135 unary_operator: AMPERSAND •

    $default  reduce using rule 135 (unary_operator)


State 62

  140 unary_operator: EXCLAMATION •

    $default  reduce using rule 140 (unary_operator)


State 63

  139 unary_operator: TILDE •

    $default  reduce using rule 139 (unary_operator)


State 64

  138 unary_operator: MINUS •

    $default  reduce using rule 138 (unary_operator)


State 65

  137 unary_operator: PLUS •

    $default  reduce using rule 137 (unary_operator)


State 66

  136 unary_operator: STAR •

    $default  reduce using rule 136 (unary_operator)


State 67

   47 declaration: declaration_specifiers • init_declarator_list SEMICOLON

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    declarator            go to state 101
    pointer_opt           go to state 28
    init_declarator_list  go to state 29
    init_declarator       go to state 30


State 68

   66 block_item: declaration •

    $default  reduce using rule 66 (block_item)


State 69

   67 block_item: statement •

    $default  reduce using rule 67 (block_item)


State 70

   57 statement: compound_statement •

    $default  reduce using rule 57 (statement)


State 71

   62 compound_statement: LBRACE block_item_list • RBRACE
   64 block_item_list: block_item_list • block_item

    BREAK               shift, and go to state 41
    CHAR                shift, and go to state 1
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    DOUBLE              shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 4
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    INT                 shift, and go to state 5
    LONG                shift, and go to state 6
    RETURN              shift, and go to state 47
    SHORT               shift, and go to state 7
    SIGNED              shift, and go to state 8
    SIZEOF              shift, and go to state 48
    STRUCT              shift, and go to state 9
    SWITCH              shift, and go to state 49
    UNSIGNED            shift, and go to state 10
    VOID                shift, and go to state 11
    WHILE               shift, and go to state 50
    BOOL                shift, and go to state 12
    COMPLEX             shift, and go to state 13
    IMAGINARY           shift, and go to state 14
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    RBRACE              shift, and go to state 126
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    declaration_specifiers     go to state 67
    type_specifier             go to state 20
    declaration                go to state 68
    statement                  go to state 69
    compound_statement         go to state 70
    block_item                 go to state 127
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 72

   65 block_item_list: block_item •

    $default  reduce using rule 65 (block_item_list)


State 73

   58 statement: expression_statement •

    $default  reduce using rule 58 (statement)


State 74

   59 statement: selection_statement •

    $default  reduce using rule 59 (statement)


State 75

   60 statement: iteration_statement •

    $default  reduce using rule 60 (statement)


State 76

   61 statement: jump_statement •

    $default  reduce using rule 61 (statement)


State 77

   68 expression_statement: expression • SEMICOLON
   83 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 128
    COMMA      shift, and go to state 129


State 78

   82 expression: assignment_expression •

    $default  reduce using rule 82 (expression)


State 79

   84 assignment_expression: conditional_expression •

    $default  reduce using rule 84 (assignment_expression)


State 80

   97 conditional_expression: logical_or_expression •
   98                       | logical_or_expression • QUESTION expression COLON conditional_expression
  100 logical_or_expression: logical_or_expression • OR_OP logical_and_expression

    OR_OP     shift, and go to state 130
    QUESTION  shift, and go to state 131

    $default  reduce using rule 97 (conditional_expression)


State 81

   99 logical_or_expression: logical_and_expression •
  102 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 132

    $default  reduce using rule 99 (logical_or_expression)


State 82

  101 logical_and_expression: inclusive_or_expression •
  104 inclusive_or_expression: inclusive_or_expression • PIPE exclusive_or_expression

    PIPE  shift, and go to state 133

    $default  reduce using rule 101 (logical_and_expression)


State 83

  103 inclusive_or_expression: exclusive_or_expression •
  106 exclusive_or_expression: exclusive_or_expression • CARET and_expression

    CARET  shift, and go to state 134

    $default  reduce using rule 103 (inclusive_or_expression)


State 84

  105 exclusive_or_expression: and_expression •
  108 and_expression: and_expression • AMPERSAND equality_expression

    AMPERSAND  shift, and go to state 135

    $default  reduce using rule 105 (exclusive_or_expression)


State 85

  107 and_expression: equality_expression •
  110 equality_expression: equality_expression • EQ_OP relational_expression
  111                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 136
    NE_OP  shift, and go to state 137

    $default  reduce using rule 107 (and_expression)


State 86

  109 equality_expression: relational_expression •
  113 relational_expression: relational_expression • LT shift_expression
  114                      | relational_expression • GT shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    LT     shift, and go to state 140
    GT     shift, and go to state 141

    $default  reduce using rule 109 (equality_expression)


State 87

  112 relational_expression: shift_expression •
  118 shift_expression: shift_expression • LEFT_OP additive_expression
  119                 | shift_expression • RIGHT_OP additive_expression

    RIGHT_OP  shift, and go to state 142
    LEFT_OP   shift, and go to state 143

    $default  reduce using rule 112 (relational_expression)


State 88

  117 shift_expression: additive_expression •
  121 additive_expression: additive_expression • PLUS multiplicative_expression
  122                    | additive_expression • MINUS multiplicative_expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 117 (shift_expression)


State 89

  120 additive_expression: multiplicative_expression •
  124 multiplicative_expression: multiplicative_expression • STAR cast_expression
  125                          | multiplicative_expression • SLASH cast_expression
  126                          | multiplicative_expression • PERCENT cast_expression

    STAR     shift, and go to state 146
    SLASH    shift, and go to state 147
    PERCENT  shift, and go to state 148

    $default  reduce using rule 120 (additive_expression)


State 90

  123 multiplicative_expression: cast_expression •

    $default  reduce using rule 123 (multiplicative_expression)


State 91

   85 assignment_expression: unary_expression • assignment_operator assignment_expression
  127 cast_expression: unary_expression •

    RIGHT_ASSIGN  shift, and go to state 149
    LEFT_ASSIGN   shift, and go to state 150
    ADD_ASSIGN    shift, and go to state 151
    SUB_ASSIGN    shift, and go to state 152
    MUL_ASSIGN    shift, and go to state 153
    DIV_ASSIGN    shift, and go to state 154
    MOD_ASSIGN    shift, and go to state 155
    AND_ASSIGN    shift, and go to state 156
    XOR_ASSIGN    shift, and go to state 157
    OR_ASSIGN     shift, and go to state 158
    ASSIGN        shift, and go to state 159

    $default  reduce using rule 127 (cast_expression)

    assignment_operator  go to state 160


State 92

  132 unary_expression: unary_operator • cast_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    cast_expression     go to state 161
    unary_expression    go to state 162
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 93

  129 unary_expression: postfix_expression •
  142 postfix_expression: postfix_expression • LBRACKET expression RBRACKET
  143                   | postfix_expression • LPAREN RPAREN
  144                   | postfix_expression • LPAREN argument_expression_list RPAREN
  145                   | postfix_expression • DOT IDENTIFIER
  146                   | postfix_expression • PTR_OP IDENTIFIER
  147                   | postfix_expression • INC_OP
  148                   | postfix_expression • DEC_OP

    INC_OP    shift, and go to state 163
    DEC_OP    shift, and go to state 164
    PTR_OP    shift, and go to state 165
    LPAREN    shift, and go to state 166
    LBRACKET  shift, and go to state 167
    DOT       shift, and go to state 168

    $default  reduce using rule 129 (unary_expression)


State 94

  141 postfix_expression: primary_expression •

    $default  reduce using rule 141 (postfix_expression)


State 95

   53 initializer: LBRACE • initializer_list RBRACE
   54            | LBRACE • initializer_list COMMA RBRACE

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LBRACE              shift, and go to state 95
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    initializer                go to state 169
    initializer_list           go to state 170
    assignment_expression      go to state 97
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 96

   51 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 51 (init_declarator)


State 97

   52 initializer: assignment_expression •

    $default  reduce using rule 52 (initializer)


State 98

   27 direct_declarator: LPAREN declarator • RPAREN

    RPAREN  shift, and go to state 171


State 99

   28 direct_declarator: direct_declarator LPAREN • parameter_type_list RPAREN
   29                  | direct_declarator LPAREN • RPAREN

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14
    RPAREN     shift, and go to state 172

    declaration_specifiers  go to state 173
    type_specifier          go to state 20
    parameter_type_list     go to state 174
    parameter_list          go to state 175
    parameter_declaration   go to state 176


State 100

   30 direct_declarator: direct_declarator LBRACKET • assignment_expression RBRACKET
   31                  | direct_declarator LBRACKET • RBRACKET

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    RBRACKET            shift, and go to state 177
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 178
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 101

   50 init_declarator: declarator •
   51                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 34

    $default  reduce using rule 50 (init_declarator)


State 102

   49 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 49 (init_declarator_list)


State 103

   79 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 79 (jump_statement)


State 104

   78 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 78 (jump_statement)


State 105

   74 iteration_statement: DO statement • WHILE LPAREN expression RPAREN SEMICOLON

    WHILE  shift, and go to state 179


State 106

   75 iteration_statement: FOR LPAREN • expression_statement expression_statement RPAREN statement
   76                    | FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression_statement       go to state 180
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 107

   77 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 108

   70 selection_statement: IF LPAREN • expression RPAREN statement
   71                    | IF LPAREN • expression RPAREN statement ELSE statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 182
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 109

   81 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 81 (jump_statement)


State 110

   80 jump_statement: RETURN expression • SEMICOLON
   83 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 183
    COMMA      shift, and go to state 129


State 111

  134 unary_expression: SIZEOF LPAREN • type_name RPAREN
  154 primary_expression: LPAREN • expression RPAREN

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 118
    DOUBLE              shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 4
    INT                 shift, and go to state 5
    LONG                shift, and go to state 6
    RESTRICT            shift, and go to state 119
    SHORT               shift, and go to state 7
    SIGNED              shift, and go to state 8
    SIZEOF              shift, and go to state 48
    STRUCT              shift, and go to state 9
    UNSIGNED            shift, and go to state 10
    VOID                shift, and go to state 11
    VOLATILE            shift, and go to state 120
    BOOL                shift, and go to state 12
    COMPLEX             shift, and go to state 13
    IMAGINARY           shift, and go to state 14
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    type_specifier             go to state 121
    expression                 go to state 122
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94
    type_name                  go to state 184
    specifier_qualifier_list   go to state 124
    type_qualifier             go to state 125


State 112

  133 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 133 (unary_expression)


State 113

   72 selection_statement: SWITCH LPAREN • expression RPAREN statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 185
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 114

   73 iteration_statement: WHILE LPAREN • expression RPAREN statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 186
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 115

  154 primary_expression: LPAREN • expression RPAREN

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 122
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 116

  130 unary_expression: INC_OP unary_expression •

    $default  reduce using rule 130 (unary_expression)


State 117

  131 unary_expression: DEC_OP unary_expression •

    $default  reduce using rule 131 (unary_expression)


State 118

  162 type_qualifier: CONST •

    $default  reduce using rule 162 (type_qualifier)


State 119

  163 type_qualifier: RESTRICT •

    $default  reduce using rule 163 (type_qualifier)


State 120

  164 type_qualifier: VOLATILE •

    $default  reduce using rule 164 (type_qualifier)


State 121

  158 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  159                         | type_specifier •

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 118
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    RESTRICT   shift, and go to state 119
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    VOLATILE   shift, and go to state 120
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14

    $default  reduce using rule 159 (specifier_qualifier_list)

    type_specifier            go to state 121
    specifier_qualifier_list  go to state 187
    type_qualifier            go to state 125


State 122

   83 expression: expression • COMMA assignment_expression
  154 primary_expression: LPAREN expression • RPAREN

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 188


State 123

  128 cast_expression: LPAREN type_name • RPAREN cast_expression

    RPAREN  shift, and go to state 189


State 124

  157 type_name: specifier_qualifier_list • abstract_declarator_opt

    STAR  shift, and go to state 26

    RPAREN    reduce using rule 24 (pointer_opt)
    RPAREN    [reduce using rule 40 (abstract_declarator_opt)]
    $default  reduce using rule 24 (pointer_opt)

    pointer_opt              go to state 190
    abstract_declarator      go to state 191
    abstract_declarator_opt  go to state 192


State 125

  160 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  161                         | type_qualifier •

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 118
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    RESTRICT   shift, and go to state 119
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    VOLATILE   shift, and go to state 120
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14

    $default  reduce using rule 161 (specifier_qualifier_list)

    type_specifier            go to state 121
    specifier_qualifier_list  go to state 193
    type_qualifier            go to state 125


State 126

   62 compound_statement: LBRACE block_item_list RBRACE •

    $default  reduce using rule 62 (compound_statement)


State 127

   64 block_item_list: block_item_list block_item •

    $default  reduce using rule 64 (block_item_list)


State 128

   68 expression_statement: expression SEMICOLON •

    $default  reduce using rule 68 (expression_statement)


State 129

   83 expression: expression COMMA • assignment_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 194
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 130

  100 logical_or_expression: logical_or_expression OR_OP • logical_and_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    logical_and_expression     go to state 195
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 131

   98 conditional_expression: logical_or_expression QUESTION • expression COLON conditional_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 196
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 132

  102 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    inclusive_or_expression    go to state 197
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 133

  104 inclusive_or_expression: inclusive_or_expression PIPE • exclusive_or_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    exclusive_or_expression    go to state 198
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 134

  106 exclusive_or_expression: exclusive_or_expression CARET • and_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    and_expression             go to state 199
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 135

  108 and_expression: and_expression AMPERSAND • equality_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    equality_expression        go to state 200
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 136

  110 equality_expression: equality_expression EQ_OP • relational_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    relational_expression      go to state 201
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 137

  111 equality_expression: equality_expression NE_OP • relational_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    relational_expression      go to state 202
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 138

  115 relational_expression: relational_expression LE_OP • shift_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    shift_expression           go to state 203
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 139

  116 relational_expression: relational_expression GE_OP • shift_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    shift_expression           go to state 204
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 140

  113 relational_expression: relational_expression LT • shift_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    shift_expression           go to state 205
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 141

  114 relational_expression: relational_expression GT • shift_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    shift_expression           go to state 206
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 142

  119 shift_expression: shift_expression RIGHT_OP • additive_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    additive_expression        go to state 207
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 143

  118 shift_expression: shift_expression LEFT_OP • additive_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    additive_expression        go to state 208
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 144

  122 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    multiplicative_expression  go to state 209
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 145

  121 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    multiplicative_expression  go to state 210
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 146

  124 multiplicative_expression: multiplicative_expression STAR • cast_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    cast_expression     go to state 211
    unary_expression    go to state 162
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 147

  125 multiplicative_expression: multiplicative_expression SLASH • cast_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    cast_expression     go to state 212
    unary_expression    go to state 162
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 148

  126 multiplicative_expression: multiplicative_expression PERCENT • cast_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    cast_expression     go to state 213
    unary_expression    go to state 162
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 149

   93 assignment_operator: RIGHT_ASSIGN •

    $default  reduce using rule 93 (assignment_operator)


State 150

   92 assignment_operator: LEFT_ASSIGN •

    $default  reduce using rule 92 (assignment_operator)


State 151

   90 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 90 (assignment_operator)


State 152

   91 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 91 (assignment_operator)


State 153

   87 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 87 (assignment_operator)


State 154

   88 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 88 (assignment_operator)


State 155

   89 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 89 (assignment_operator)


State 156

   94 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 94 (assignment_operator)


State 157

   95 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 95 (assignment_operator)


State 158

   96 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 96 (assignment_operator)


State 159

   86 assignment_operator: ASSIGN •

    $default  reduce using rule 86 (assignment_operator)


State 160

   85 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 214
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 161

  132 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 132 (unary_expression)


State 162

  127 cast_expression: unary_expression •

    $default  reduce using rule 127 (cast_expression)


State 163

  147 postfix_expression: postfix_expression INC_OP •

    $default  reduce using rule 147 (postfix_expression)


State 164

  148 postfix_expression: postfix_expression DEC_OP •

    $default  reduce using rule 148 (postfix_expression)


State 165

  146 postfix_expression: postfix_expression PTR_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 166

  143 postfix_expression: postfix_expression LPAREN • RPAREN
  144                   | postfix_expression LPAREN • argument_expression_list RPAREN

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    RPAREN              shift, and go to state 216
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 217
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94
    argument_expression_list   go to state 218


State 167

  142 postfix_expression: postfix_expression LBRACKET • expression RBRACKET

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 219
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 168

  145 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 220


State 169

   55 initializer_list: initializer •

    $default  reduce using rule 55 (initializer_list)


State 170

   53 initializer: LBRACE initializer_list • RBRACE
   54            | LBRACE initializer_list • COMMA RBRACE
   56 initializer_list: initializer_list • COMMA initializer

    RBRACE  shift, and go to state 221
    COMMA   shift, and go to state 222


State 171

   27 direct_declarator: LPAREN declarator RPAREN •

    $default  reduce using rule 27 (direct_declarator)


State 172

   29 direct_declarator: direct_declarator LPAREN RPAREN •

    $default  reduce using rule 29 (direct_declarator)


State 173

   36 parameter_declaration: declaration_specifiers • declarator
   37                      | declaration_specifiers • abstract_declarator_opt

    STAR  shift, and go to state 26

    COMMA     reduce using rule 24 (pointer_opt)
    COMMA     [reduce using rule 40 (abstract_declarator_opt)]
    RPAREN    reduce using rule 24 (pointer_opt)
    RPAREN    [reduce using rule 40 (abstract_declarator_opt)]
    $default  reduce using rule 24 (pointer_opt)

    declarator               go to state 223
    pointer_opt              go to state 224
    abstract_declarator      go to state 191
    abstract_declarator_opt  go to state 225


State 174

   28 direct_declarator: direct_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 226


State 175

   32 parameter_type_list: parameter_list •
   33                    | parameter_list • COMMA ELLIPSIS
   35 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 227

    $default  reduce using rule 32 (parameter_type_list)


State 176

   34 parameter_list: parameter_declaration •

    $default  reduce using rule 34 (parameter_list)


State 177

   31 direct_declarator: direct_declarator LBRACKET RBRACKET •

    $default  reduce using rule 31 (direct_declarator)


State 178

   30 direct_declarator: direct_declarator LBRACKET assignment_expression • RBRACKET

    RBRACKET  shift, and go to state 228


State 179

   74 iteration_statement: DO statement WHILE • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 229


State 180

   75 iteration_statement: FOR LPAREN expression_statement • expression_statement RPAREN statement
   76                    | FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression_statement       go to state 230
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 181

   77 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 77 (jump_statement)


State 182

   70 selection_statement: IF LPAREN expression • RPAREN statement
   71                    | IF LPAREN expression • RPAREN statement ELSE statement
   83 expression: expression • COMMA assignment_expression

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 231


State 183

   80 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 80 (jump_statement)


State 184

  134 unary_expression: SIZEOF LPAREN type_name • RPAREN

    RPAREN  shift, and go to state 232


State 185

   72 selection_statement: SWITCH LPAREN expression • RPAREN statement
   83 expression: expression • COMMA assignment_expression

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 233


State 186

   73 iteration_statement: WHILE LPAREN expression • RPAREN statement
   83 expression: expression • COMMA assignment_expression

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 234


State 187

  158 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 158 (specifier_qualifier_list)


State 188

  154 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 154 (primary_expression)


State 189

  128 cast_expression: LPAREN type_name RPAREN • cast_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    cast_expression     go to state 235
    unary_expression    go to state 162
    unary_operator      go to state 92
    postfix_expression  go to state 93
    primary_expression  go to state 94


State 190

   38 abstract_declarator: pointer_opt • direct_abstract_declarator
   39                    | pointer_opt •

    LPAREN  shift, and go to state 236

    $default  reduce using rule 39 (abstract_declarator)

    direct_abstract_declarator  go to state 237


State 191

   41 abstract_declarator_opt: abstract_declarator •

    $default  reduce using rule 41 (abstract_declarator_opt)


State 192

  157 type_name: specifier_qualifier_list abstract_declarator_opt •

    $default  reduce using rule 157 (type_name)


State 193

  160 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 160 (specifier_qualifier_list)


State 194

   83 expression: expression COMMA assignment_expression •

    $default  reduce using rule 83 (expression)


State 195

  100 logical_or_expression: logical_or_expression OR_OP logical_and_expression •
  102 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 132

    $default  reduce using rule 100 (logical_or_expression)


State 196

   83 expression: expression • COMMA assignment_expression
   98 conditional_expression: logical_or_expression QUESTION expression • COLON conditional_expression

    COMMA  shift, and go to state 129
    COLON  shift, and go to state 238


State 197

  102 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •
  104 inclusive_or_expression: inclusive_or_expression • PIPE exclusive_or_expression

    PIPE  shift, and go to state 133

    $default  reduce using rule 102 (logical_and_expression)


State 198

  104 inclusive_or_expression: inclusive_or_expression PIPE exclusive_or_expression •
  106 exclusive_or_expression: exclusive_or_expression • CARET and_expression

    CARET  shift, and go to state 134

    $default  reduce using rule 104 (inclusive_or_expression)


State 199

  106 exclusive_or_expression: exclusive_or_expression CARET and_expression •
  108 and_expression: and_expression • AMPERSAND equality_expression

    AMPERSAND  shift, and go to state 135

    $default  reduce using rule 106 (exclusive_or_expression)


State 200

  108 and_expression: and_expression AMPERSAND equality_expression •
  110 equality_expression: equality_expression • EQ_OP relational_expression
  111                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 136
    NE_OP  shift, and go to state 137

    $default  reduce using rule 108 (and_expression)


State 201

  110 equality_expression: equality_expression EQ_OP relational_expression •
  113 relational_expression: relational_expression • LT shift_expression
  114                      | relational_expression • GT shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    LT     shift, and go to state 140
    GT     shift, and go to state 141

    $default  reduce using rule 110 (equality_expression)


State 202

  111 equality_expression: equality_expression NE_OP relational_expression •
  113 relational_expression: relational_expression • LT shift_expression
  114                      | relational_expression • GT shift_expression
  115                      | relational_expression • LE_OP shift_expression
  116                      | relational_expression • GE_OP shift_expression

    LE_OP  shift, and go to state 138
    GE_OP  shift, and go to state 139
    LT     shift, and go to state 140
    GT     shift, and go to state 141

    $default  reduce using rule 111 (equality_expression)


State 203

  115 relational_expression: relational_expression LE_OP shift_expression •
  118 shift_expression: shift_expression • LEFT_OP additive_expression
  119                 | shift_expression • RIGHT_OP additive_expression

    RIGHT_OP  shift, and go to state 142
    LEFT_OP   shift, and go to state 143

    $default  reduce using rule 115 (relational_expression)


State 204

  116 relational_expression: relational_expression GE_OP shift_expression •
  118 shift_expression: shift_expression • LEFT_OP additive_expression
  119                 | shift_expression • RIGHT_OP additive_expression

    RIGHT_OP  shift, and go to state 142
    LEFT_OP   shift, and go to state 143

    $default  reduce using rule 116 (relational_expression)


State 205

  113 relational_expression: relational_expression LT shift_expression •
  118 shift_expression: shift_expression • LEFT_OP additive_expression
  119                 | shift_expression • RIGHT_OP additive_expression

    RIGHT_OP  shift, and go to state 142
    LEFT_OP   shift, and go to state 143

    $default  reduce using rule 113 (relational_expression)


State 206

  114 relational_expression: relational_expression GT shift_expression •
  118 shift_expression: shift_expression • LEFT_OP additive_expression
  119                 | shift_expression • RIGHT_OP additive_expression

    RIGHT_OP  shift, and go to state 142
    LEFT_OP   shift, and go to state 143

    $default  reduce using rule 114 (relational_expression)


State 207

  119 shift_expression: shift_expression RIGHT_OP additive_expression •
  121 additive_expression: additive_expression • PLUS multiplicative_expression
  122                    | additive_expression • MINUS multiplicative_expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 119 (shift_expression)


State 208

  118 shift_expression: shift_expression LEFT_OP additive_expression •
  121 additive_expression: additive_expression • PLUS multiplicative_expression
  122                    | additive_expression • MINUS multiplicative_expression

    MINUS  shift, and go to state 144
    PLUS   shift, and go to state 145

    $default  reduce using rule 118 (shift_expression)


State 209

  122 additive_expression: additive_expression MINUS multiplicative_expression •
  124 multiplicative_expression: multiplicative_expression • STAR cast_expression
  125                          | multiplicative_expression • SLASH cast_expression
  126                          | multiplicative_expression • PERCENT cast_expression

    STAR     shift, and go to state 146
    SLASH    shift, and go to state 147
    PERCENT  shift, and go to state 148

    $default  reduce using rule 122 (additive_expression)


State 210

  121 additive_expression: additive_expression PLUS multiplicative_expression •
  124 multiplicative_expression: multiplicative_expression • STAR cast_expression
  125                          | multiplicative_expression • SLASH cast_expression
  126                          | multiplicative_expression • PERCENT cast_expression

    STAR     shift, and go to state 146
    SLASH    shift, and go to state 147
    PERCENT  shift, and go to state 148

    $default  reduce using rule 121 (additive_expression)


State 211

  124 multiplicative_expression: multiplicative_expression STAR cast_expression •

    $default  reduce using rule 124 (multiplicative_expression)


State 212

  125 multiplicative_expression: multiplicative_expression SLASH cast_expression •

    $default  reduce using rule 125 (multiplicative_expression)


State 213

  126 multiplicative_expression: multiplicative_expression PERCENT cast_expression •

    $default  reduce using rule 126 (multiplicative_expression)


State 214

   85 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 85 (assignment_expression)


State 215

  146 postfix_expression: postfix_expression PTR_OP IDENTIFIER •

    $default  reduce using rule 146 (postfix_expression)


State 216

  143 postfix_expression: postfix_expression LPAREN RPAREN •

    $default  reduce using rule 143 (postfix_expression)


State 217

  155 argument_expression_list: assignment_expression •

    $default  reduce using rule 155 (argument_expression_list)


State 218

  144 postfix_expression: postfix_expression LPAREN argument_expression_list • RPAREN
  156 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA   shift, and go to state 239
    RPAREN  shift, and go to state 240


State 219

   83 expression: expression • COMMA assignment_expression
  142 postfix_expression: postfix_expression LBRACKET expression • RBRACKET

    COMMA     shift, and go to state 129
    RBRACKET  shift, and go to state 241


State 220

  145 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 145 (postfix_expression)


State 221

   53 initializer: LBRACE initializer_list RBRACE •

    $default  reduce using rule 53 (initializer)


State 222

   54 initializer: LBRACE initializer_list COMMA • RBRACE
   56 initializer_list: initializer_list COMMA • initializer

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LBRACE              shift, and go to state 95
    RBRACE              shift, and go to state 242
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    initializer                go to state 243
    assignment_expression      go to state 97
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 223

   36 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 36 (parameter_declaration)


State 224

   23 declarator: pointer_opt • direct_declarator
   38 abstract_declarator: pointer_opt • direct_abstract_declarator
   39                    | pointer_opt •

    IDENTIFIER  shift, and go to state 36
    LPAREN      shift, and go to state 244

    $default  reduce using rule 39 (abstract_declarator)

    direct_declarator           go to state 38
    direct_abstract_declarator  go to state 237


State 225

   37 parameter_declaration: declaration_specifiers abstract_declarator_opt •

    $default  reduce using rule 37 (parameter_declaration)


State 226

   28 direct_declarator: direct_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 28 (direct_declarator)


State 227

   33 parameter_type_list: parameter_list COMMA • ELLIPSIS
   35 parameter_list: parameter_list COMMA • parameter_declaration

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14
    ELLIPSIS   shift, and go to state 245

    declaration_specifiers  go to state 173
    type_specifier          go to state 20
    parameter_declaration   go to state 246


State 228

   30 direct_declarator: direct_declarator LBRACKET assignment_expression RBRACKET •

    $default  reduce using rule 30 (direct_declarator)


State 229

   74 iteration_statement: DO statement WHILE LPAREN • expression RPAREN SEMICOLON

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 247
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 230

   75 iteration_statement: FOR LPAREN expression_statement expression_statement • RPAREN statement
   76                    | FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    RPAREN              shift, and go to state 248
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    expression                 go to state 249
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 231

   70 selection_statement: IF LPAREN expression RPAREN • statement
   71                    | IF LPAREN expression RPAREN • statement ELSE statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 250
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 232

  134 unary_expression: SIZEOF LPAREN type_name RPAREN •

    $default  reduce using rule 134 (unary_expression)


State 233

   72 selection_statement: SWITCH LPAREN expression RPAREN • statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 251
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 234

   73 iteration_statement: WHILE LPAREN expression RPAREN • statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 252
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 235

  128 cast_expression: LPAREN type_name RPAREN cast_expression •

    $default  reduce using rule 128 (cast_expression)


State 236

   42 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    pointer_opt          go to state 190
    abstract_declarator  go to state 253


State 237

   38 abstract_declarator: pointer_opt direct_abstract_declarator •
   43 direct_abstract_declarator: direct_abstract_declarator • LPAREN parameter_type_list RPAREN
   44                           | direct_abstract_declarator • LPAREN RPAREN
   45                           | direct_abstract_declarator • LBRACKET assignment_expression RBRACKET
   46                           | direct_abstract_declarator • LBRACKET RBRACKET

    LPAREN    shift, and go to state 254
    LBRACKET  shift, and go to state 255

    $default  reduce using rule 38 (abstract_declarator)


State 238

   98 conditional_expression: logical_or_expression QUESTION expression COLON • conditional_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    conditional_expression     go to state 256
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 162
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 239

  156 argument_expression_list: argument_expression_list COMMA • assignment_expression

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 257
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 240

  144 postfix_expression: postfix_expression LPAREN argument_expression_list RPAREN •

    $default  reduce using rule 144 (postfix_expression)


State 241

  142 postfix_expression: postfix_expression LBRACKET expression RBRACKET •

    $default  reduce using rule 142 (postfix_expression)


State 242

   54 initializer: LBRACE initializer_list COMMA RBRACE •

    $default  reduce using rule 54 (initializer)


State 243

   56 initializer_list: initializer_list COMMA initializer •

    $default  reduce using rule 56 (initializer_list)


State 244

   27 direct_declarator: LPAREN • declarator RPAREN
   42 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN

    STAR  shift, and go to state 26

    $default  reduce using rule 24 (pointer_opt)

    declarator           go to state 98
    pointer_opt          go to state 224
    abstract_declarator  go to state 253


State 245

   33 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 33 (parameter_type_list)


State 246

   35 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 35 (parameter_list)


State 247

   74 iteration_statement: DO statement WHILE LPAREN expression • RPAREN SEMICOLON
   83 expression: expression • COMMA assignment_expression

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 258


State 248

   75 iteration_statement: FOR LPAREN expression_statement expression_statement RPAREN • statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 259
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 249

   76 iteration_statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement
   83 expression: expression • COMMA assignment_expression

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 260


State 250

   70 selection_statement: IF LPAREN expression RPAREN statement •
   71                    | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 261

    ELSE      [reduce using rule 70 (selection_statement)]
    $default  reduce using rule 70 (selection_statement)


State 251

   72 selection_statement: SWITCH LPAREN expression RPAREN statement •

    $default  reduce using rule 72 (selection_statement)


State 252

   73 iteration_statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 73 (iteration_statement)


State 253

   42 direct_abstract_declarator: LPAREN abstract_declarator • RPAREN

    RPAREN  shift, and go to state 262


State 254

   43 direct_abstract_declarator: direct_abstract_declarator LPAREN • parameter_type_list RPAREN
   44                           | direct_abstract_declarator LPAREN • RPAREN

    CHAR       shift, and go to state 1
    DOUBLE     shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    LONG       shift, and go to state 6
    SHORT      shift, and go to state 7
    SIGNED     shift, and go to state 8
    STRUCT     shift, and go to state 9
    UNSIGNED   shift, and go to state 10
    VOID       shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 13
    IMAGINARY  shift, and go to state 14
    RPAREN     shift, and go to state 263

    declaration_specifiers  go to state 173
    type_specifier          go to state 20
    parameter_type_list     go to state 264
    parameter_list          go to state 175
    parameter_declaration   go to state 176


State 255

   45 direct_abstract_declarator: direct_abstract_declarator LBRACKET • assignment_expression RBRACKET
   46                           | direct_abstract_declarator LBRACKET • RBRACKET

    SIZEOF              shift, and go to state 48
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    LPAREN              shift, and go to state 60
    RBRACKET            shift, and go to state 265
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    assignment_expression      go to state 266
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 256

   98 conditional_expression: logical_or_expression QUESTION expression COLON conditional_expression •

    $default  reduce using rule 98 (conditional_expression)


State 257

  156 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 156 (argument_expression_list)


State 258

   74 iteration_statement: DO statement WHILE LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 267


State 259

   75 iteration_statement: FOR LPAREN expression_statement expression_statement RPAREN statement •

    $default  reduce using rule 75 (iteration_statement)


State 260

   76 iteration_statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 268
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 261

   71 selection_statement: IF LPAREN expression RPAREN statement ELSE • statement

    BREAK               shift, and go to state 41
    CONTINUE            shift, and go to state 42
    DO                  shift, and go to state 43
    FOR                 shift, and go to state 44
    GOTO                shift, and go to state 45
    IF                  shift, and go to state 46
    RETURN              shift, and go to state 47
    SIZEOF              shift, and go to state 48
    SWITCH              shift, and go to state 49
    WHILE               shift, and go to state 50
    IDENTIFIER          shift, and go to state 51
    INTEGER_CONSTANT    shift, and go to state 52
    FLOATING_CONSTANT   shift, and go to state 53
    CHARACTER_CONSTANT  shift, and go to state 54
    STRING_LITERAL      shift, and go to state 55
    INC_OP              shift, and go to state 56
    DEC_OP              shift, and go to state 57
    SEMICOLON           shift, and go to state 58
    LBRACE              shift, and go to state 33
    LPAREN              shift, and go to state 60
    AMPERSAND           shift, and go to state 61
    EXCLAMATION         shift, and go to state 62
    TILDE               shift, and go to state 63
    MINUS               shift, and go to state 64
    PLUS                shift, and go to state 65
    STAR                shift, and go to state 66

    statement                  go to state 269
    compound_statement         go to state 70
    expression_statement       go to state 73
    selection_statement        go to state 74
    iteration_statement        go to state 75
    jump_statement             go to state 76
    expression                 go to state 77
    assignment_expression      go to state 78
    conditional_expression     go to state 79
    logical_or_expression      go to state 80
    logical_and_expression     go to state 81
    inclusive_or_expression    go to state 82
    exclusive_or_expression    go to state 83
    and_expression             go to state 84
    equality_expression        go to state 85
    relational_expression      go to state 86
    shift_expression           go to state 87
    additive_expression        go to state 88
    multiplicative_expression  go to state 89
    cast_expression            go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    postfix_expression         go to state 93
    primary_expression         go to state 94


State 262

   42 direct_abstract_declarator: LPAREN abstract_declarator RPAREN •

    $default  reduce using rule 42 (direct_abstract_declarator)


State 263

   44 direct_abstract_declarator: direct_abstract_declarator LPAREN RPAREN •

    $default  reduce using rule 44 (direct_abstract_declarator)


State 264

   43 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 270


State 265

   46 direct_abstract_declarator: direct_abstract_declarator LBRACKET RBRACKET •

    $default  reduce using rule 46 (direct_abstract_declarator)


State 266

   45 direct_abstract_declarator: direct_abstract_declarator LBRACKET assignment_expression • RBRACKET

    RBRACKET  shift, and go to state 271


State 267

   74 iteration_statement: DO statement WHILE LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 74 (iteration_statement)


State 268

   76 iteration_statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 76 (iteration_statement)


State 269

   71 selection_statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 71 (selection_statement)


State 270

   43 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 43 (direct_abstract_declarator)


State 271

   45 direct_abstract_declarator: direct_abstract_declarator LBRACKET assignment_expression RBRACKET •

    $default  reduce using rule 45 (direct_abstract_declarator)
